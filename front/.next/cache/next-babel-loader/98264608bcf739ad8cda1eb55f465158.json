{"ast":null,"code":"import { all, fork, takeLatest, call, put, take, delay } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield delay(4); //\n    //yield call(loginAPI);\n\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (E) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nfunction* helloSaga() {\n  console.log('before saga');\n  yield take(HELLO_SAGA);\n  console.log('after saga');\n}\n\nexport default function* userSaga() {\n  yield helloSaga();\n}","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/sagas/user.js"],"names":["all","fork","takeLatest","call","put","take","delay","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","HELLO_SAGA","loginAPI","login","type","E","console","error","e","watchLogin","helloSaga","log","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,EAAiDC,KAAjD,QAA8D,oBAA9D;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAuD,kBAAvD;AAEA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAmB,CAClB;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMN,KAAK,CAAC,CAAD,CAAX,CADD,CACkB;AACjB;;AACA,UAAMF,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEL;AADA,KAAD,CAAT;AAGH,GAND,CAMC,OAAMM,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcC,CAAd;AACA,UAAMb,GAAG,CAAC;AACNS,MAAAA,IAAI,EAACJ;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUS,UAAV,GAAsB;AAClB,QAAMhB,UAAU,CAACK,MAAD,EAASK,KAAT,CAAhB;AACH;;AAED,UAAUO,SAAV,GAAqB;AACjBJ,EAAAA,OAAO,CAACK,GAAR,CAAY,aAAZ;AACA,QAAMf,IAAI,CAACK,UAAD,CAAV;AACAK,EAAAA,OAAO,CAACK,GAAR,CAAY,YAAZ;AACH;;AAGD,eAAe,UAAUC,QAAV,GAAoB;AAC/B,QAAMF,SAAS,EAAf;AACH","sourcesContent":["import { all, fork, takeLatest, call, put, take, delay } from 'redux-saga/effects';\r\nimport {LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE, } from '../reducers/user';\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA';\r\n\r\nfunction loginAPI(){ \r\n}\r\n\r\nfunction* login(){\r\n    try{\r\n        yield delay(4);  //\r\n        //yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    }catch(E){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN, login);\r\n}\r\n\r\nfunction* helloSaga(){\r\n    console.log('before saga');\r\n    yield take(HELLO_SAGA);\r\n    console.log('after saga');\r\n}\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield helloSaga();\r\n}"]},"metadata":{},"sourceType":"module"}