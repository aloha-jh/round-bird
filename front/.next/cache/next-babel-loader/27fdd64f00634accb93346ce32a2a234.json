{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljh\\\\Desktop\\\\all\\\\DigitalGallery\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Button, CardMedia, CircularProgress } from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    postAdded,\n    isAddingPost\n  } = useSelector(state => state.user);\n  const {\n    0: textArea,\n    1: setTextArea\n  } = useState('');\n  useEffect(() => {\n    if (postAdded) {\n      setTextArea('');\n    }\n  }, [postAdded]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    if (!textArea.trim()) {\n      return alert('게시글을 작성하려면 내용을 입력해야 합니다.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: textArea\n      }\n    });\n  }, [textArea]);\n  const onChangeTextArea = useCallback(e => {\n    setTextArea(e.target.value);\n  }, [textArea]);\n  return (// <form encType=\"multipart/form-data\" onSubmit={onSubmitForm}> \n    __jsx(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(\"textarea\", {\n      className: \"post-textarea\",\n      onChange: onChangeTextArea,\n      value: textArea,\n      placeholder: \"\\uC624\\uB298 \\uD558\\uB8E8\\uB294 \\uC5B4\\uB560\\uB098\\uC694?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    })), __jsx(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"\\uC62C\\uB9AC\\uAE30\", isAddingPost && __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    })), imagePaths && imagePaths.map((v, i) => {\n      return __jsx(React.Fragment, null, __jsx(CardMedia, {\n        image: \"http://localhost:3000/\" + v,\n        alt: v,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, \"\\uC81C\\uAC70\"));\n    }))\n  );\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","IconButton","Button","CardMedia","CircularProgress","PhotoCamera","ADD_POST_REQUEST","PostForm","dispatch","imagePaths","postAdded","isAddingPost","state","user","textArea","setTextArea","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeTextArea","target","value","float","map","v","i"],"mappings":"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","sourcesContent":["import React ,{ useCallback ,useState, useEffect }from 'react'; \r\nimport { useSelector , useDispatch } from 'react-redux'; \r\nimport { IconButton, Button, CardMedia, CircularProgress }from '@material-ui/core'; \r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () =>{\r\n    const dispatch = useDispatch();\r\n    const { imagePaths ,postAdded, isAddingPost } = useSelector(state=>state.user);\r\n    const [ textArea, setTextArea ] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        if(postAdded){\r\n            setTextArea('');\r\n        }\r\n    },[postAdded])\r\n\r\n    const onSubmitForm = useCallback((e)=>{ \r\n        e.preventDefault();\r\n        if( !textArea.trim() ){\r\n            return alert('게시글을 작성하려면 내용을 입력해야 합니다.');\r\n        }\r\n        dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:{\r\n                content:textArea,\r\n            }\r\n        })\r\n    \r\n    },[textArea]);\r\n\r\n    const onChangeTextArea = useCallback((e)=>{\r\n        setTextArea(e.target.value);\r\n    },[textArea]);\r\n\r\n    return(\r\n        // <form encType=\"multipart/form-data\" onSubmit={onSubmitForm}> \r\n        <form onSubmit={onSubmitForm}> \r\n            <textarea className=\"post-textarea\" onChange={onChangeTextArea } value={textArea} \r\n            placeholder=\"오늘 하루는 어땠나요?\" /> \r\n            <input type=\"file\" multiple hidden  />\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoCamera />\r\n            </IconButton> \r\n            <Button type=\"submit\" color=\"primary\" style={{float:'right'}} > \r\n                올리기{isAddingPost && <CircularProgress />}\r\n                </Button>\r\n            {imagePaths && imagePaths.map( (v,i)=>{\r\n                return(\r\n                <><CardMedia \r\n                image={\"http://localhost:3000/\"+v} alt={v}\r\n                /><Button>제거</Button>\r\n                </>\r\n                )\r\n            })} \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;\r\n\r\n             "]},"metadata":{},"sourceType":"module"}