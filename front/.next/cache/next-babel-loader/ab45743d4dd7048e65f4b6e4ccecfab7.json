{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, SING_UP_REQUEST, LOG_IN_REQUEST, SING_UP_SUCCESS, SING_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3003/api';\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SING_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SING_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SING_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logoutAPI(logoutData) {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logout(action) {\n  return _regeneratorRuntime.wrap(function logout$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(logoutData) {\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('axios호출보냄');\n          _context7.next = 4;\n          return call(loadUserAPI);\n\n        case 4:\n          result = _context7.sent;\n          console.log(result);\n          _context7.next = 8;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 15;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          console.log('load User watch....');\n          _context8.next = 3;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchSignUp), fork(watchLogin), fork(watchLoadUser), fork(watchLogout)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignUp","logout","watchLogout","loadUser","watchLoadUser","userSaga","all","fork","takeLatest","call","put","take","delay","takeEvery","LOG_IN_SUCCESS","LOG_IN_FAILURE","SING_UP_REQUEST","LOG_IN_REQUEST","SING_UP_SUCCESS","SING_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","axios","defaults","baseURL","loginAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","logoutAPI","logoutData","LOG_OUT_FAILURE","loadUserAPI","get","log"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\r\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, SING_UP_REQUEST, \r\n    LOG_IN_REQUEST, SING_UP_SUCCESS, SING_UP_FAILURE, \r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS, LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,LOAD_USER_FAILURE } from '../reducers/user';\r\nimport axios from 'axios';\r\n \r\naxios.defaults.baseURL='http://localhost:3003/api';\r\n\r\nfunction loginAPI(loginData){ \r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials: true,\r\n    });\r\n} \r\nfunction* login( action ){\r\n    try{ \r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n} \r\nfunction* watchLogin(){\r\n    yield takeEvery( LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction signUpAPI( signUpData ){\r\n    return axios.post('/user/',signUpData);\r\n}\r\nfunction* signUp(action){  //LOG_OUT_REQUEST 의 액션인자 임. 데이터가여기들어있다!\r\n    try{ \r\n        yield call(signUpAPI, action.data);  //call 매서드가 첫번째는 함수고 두번째는 인자(첫번째함수에 인자로전달되는인자).\r\n        //throw new Error('에러');\r\n        yield put({\r\n            type: SING_UP_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:SING_UP_FAILURE,\r\n            error:e\r\n        })\r\n    }\r\n}  \r\nfunction* watchSignUp(){\r\n    yield takeEvery( SING_UP_REQUEST, signUp)\r\n}\r\n\r\n\r\nfunction logoutAPI( logoutData ){\r\n    return axios.post('/user/logout',{},{\r\n        withCredentials:true,\r\n    });\r\n}\r\nfunction* logout(action){   \r\n    try{ \r\n        yield call(logoutAPI );    \r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error:e\r\n        })\r\n    }\r\n}  \r\nfunction* watchLogout(){\r\n    yield takeEvery( LOG_OUT_REQUEST, loadUser)\r\n}\r\n\r\n\r\nfunction loadUserAPI( logoutData ){\r\n    return axios.get('/user/',{\r\n        withCredentials:true,\r\n    });\r\n}\r\nfunction* loadUser(action){   \r\n    try{ \r\n        console.log('axios호출보냄');\r\n        const result = yield call(loadUserAPI );  \r\n        console.log( result );  \r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e\r\n        })\r\n    }\r\n}  \r\nfunction* watchLoadUser(){\r\n    console.log('load User watch....');\r\n    yield takeEvery( LOAD_USER_REQUEST, loadUser)\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork( watchSignUp ),\r\n        fork( watchLogin ), \r\n        fork( watchLoadUser ),\r\n        fork( watchLogout),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}