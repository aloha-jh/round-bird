{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '정하'\n    },\n    content: '주말인데 비가오네요. 파전이 생각납니다.',\n    //img:'http://localhost:3000/img/zeon.jpg'\n    img: 'https://storage.wcuisine.net/image/production/service/image/recipe/676/2b9ff3dd-3370-4103-8d0c-893ceeab1caf.jpg?size=1024x',\n    createdAt: '2020-08-08',\n    Comments: []\n  }],\n  imagePaths: [],\n  //이미지 미리보기 경로\n  addPostErrorReason: false,\n  //\n  isAddingPost: false,\n  //포스트업로드중\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: ''\n};\nvar dummyPost = {\n  User: {\n    id: 1,\n    nickname: '닐라'\n  },\n  content: '애옹.',\n  Comments: []\n};\nvar dummyComment = {\n  User: {\n    id: 2,\n    nickname: '탄이'\n  },\n  createdAt: new Date(),\n  content: '만나서반가워'\n}; //포스트업로드\n//메인포스트-내피드 로드하는 액션\n//해시태그검색결과 로딩액션\n//사용자가 어떤게시글썻는지로딩하는 액션\n//이미지업로드하는액션\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; //이미지업로드한거취소(동기)\n\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE'; //포스트에라이크누르는액션\n//포스트에 라이크취소액션\n//게시글에댓글남기기\n//게시글에댓글불러오기\n//팔로우끊기액션\n//포스트삭제액션\n\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE'; //리트윗\n\nexport var RE_POST_REQUEST = 'RE_POST_REQUEST';\nexport var RE_POST_SUCCESS = 'RE_POST_SUCCESS';\nexport var RE_POST_FAILURE = 'RE_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'; //업데이트-숙제?\n\nexport var UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport var UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport var UPDATE_POST_FAILURE = 'UPDATE_POST_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingPost: false,\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          CommentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        }); //v.id가 뭘까?\n        //state.mainPosts[postIndex].Comments.push(action.data.comment); 불변성때문에,\n\n        var post = state.mainPosts[postIndex]; //해당하는포스트를복사\n\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]); //기존댓글에추가\n\n        var mainPosts = _toConsumableArray(state.mainPosts); //메인포스트를복사\n\n\n        mainPosts[postIndex] = _objectSpread(_objectSpread({}, post), {}, {\n          Comments: Comments\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          CommentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","createdAt","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","dummyPost","dummyComment","Date","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RE_POST_REQUEST","RE_POST_SUCCESS","RE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","reducer","state","action","type","error","CommentAdded","postIndex","findIndex","v","data","postId","post","comment"],"mappings":"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","sourcesContent":["export const initialState={\r\n    mainPosts:[{\r\n        User:{\r\n            id:1,\r\n            nickname:'정하',\r\n        },\r\n        content:'주말인데 비가오네요. 파전이 생각납니다.',\r\n        //img:'http://localhost:3000/img/zeon.jpg'\r\n        img:'https://storage.wcuisine.net/image/production/service/image/recipe/676/2b9ff3dd-3370-4103-8d0c-893ceeab1caf.jpg?size=1024x',\r\n        createdAt: '2020-08-08',\r\n        Comments:[]\r\n    }],\r\n    imagePaths:[], //이미지 미리보기 경로\r\n\r\n    addPostErrorReason: false, //\r\n    isAddingPost: false, //포스트업로드중\r\n    postAdded: false,\r\n\r\n    isAddingComment:false,\r\n    addCommentErrorReason:'',\r\n}\r\n\r\nconst dummyPost = {\r\n    User:{\r\n        id:1,\r\n        nickname: '닐라', \r\n    },\r\n    content:'애옹.',\r\n    Comments:[],\r\n}\r\n\r\nconst dummyComment = {\r\n    User:{\r\n        id:2,\r\n        nickname: '탄이', \r\n    },\r\n    createdAt: new Date(),\r\n    content:'만나서반가워',\r\n}\r\n\r\n\r\n//포스트업로드\r\n//메인포스트-내피드 로드하는 액션\r\n//해시태그검색결과 로딩액션\r\n//사용자가 어떤게시글썻는지로딩하는 액션\r\n//이미지업로드하는액션\r\n \r\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST ='LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS ='LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE ='LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST ='LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS ='LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE ='LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\n\r\nexport const LOAD_USER_POSTS_REQUEST ='LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS ='LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE ='LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST ='UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS ='UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE ='UPLOAD_IMAGES_FAILURE';\r\n\r\n//이미지업로드한거취소(동기)\r\nexport const REMOVE_IMAGE ='REMOVE_IMAGE';\r\n \r\n//포스트에라이크누르는액션\r\n//포스트에 라이크취소액션\r\n\r\n//게시글에댓글남기기\r\n//게시글에댓글불러오기\r\n\r\n//팔로우끊기액션\r\n//포스트삭제액션\r\n\r\nexport const LIKE_POST_REQUEST ='LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS ='LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE ='LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST ='UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS ='UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE ='UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST ='ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS ='ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE ='ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENT_REQUEST ='LOAD_COMMENT_REQUEST';\r\nexport const LOAD_COMMENT_SUCCESS ='LOAD_COMMENT_SUCCESS';\r\nexport const LOAD_COMMENT_FAILURE ='LOAD_COMMENT_FAILURE';\r\n\r\n//리트윗\r\nexport const RE_POST_REQUEST ='RE_POST_REQUEST';\r\nexport const RE_POST_SUCCESS ='RE_POST_SUCCESS';\r\nexport const RE_POST_FAILURE ='RE_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST ='REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS ='REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE ='REMOVE_POST_FAILURE';\r\n\r\n//업데이트-숙제?\r\nexport const UPDATE_POST_REQUEST ='UPDATE_POST_REQUEST';\r\nexport const UPDATE_POST_SUCCESS ='UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_FAILURE ='UPDATE_POST_FAILURE';\r\n\r\n\r\n\r\n \r\n\r\nconst reducer = (state = initialState, action ) =>{\r\n    switch(action.type){\r\n\r\n        case ADD_POST_REQUEST:{\r\n            return{\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason:'',\r\n                postAdded: false,\r\n            }\r\n        } \r\n        case ADD_POST_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts:[ dummyPost, ...state.mainPosts],\r\n                postAdded: true,\r\n            }\r\n        } \r\n        case ADD_POST_FAILURE:{\r\n            return{\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason:action.error,\r\n            }\r\n        } \r\n\r\n\r\n        case ADD_COMMENT_REQUEST:{\r\n            return{\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason:'',\r\n                CommentAdded: false,\r\n            }\r\n        } \r\n        case ADD_COMMENT_SUCCESS:{\r\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId); //v.id가 뭘까?\r\n            //state.mainPosts[postIndex].Comments.push(action.data.comment); 불변성때문에,\r\n            const post = state.mainPosts[postIndex]; //해당하는포스트를복사\r\n            const Comments = [...post.Comments, action.data.comment ]; //기존댓글에추가\r\n            const mainPosts = [...state.mainPosts]; //메인포스트를복사\r\n            mainPosts[postIndex] = {...post, Comments };\r\n\r\n            return{\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                CommentAdded: true,\r\n            }\r\n        } \r\n        case ADD_COMMENT_FAILURE:{\r\n            return{\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason:action.error,\r\n            }\r\n        } \r\n\r\n\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}