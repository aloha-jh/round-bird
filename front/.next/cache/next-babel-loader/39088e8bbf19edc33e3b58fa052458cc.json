{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, SING_UP_REQUEST, LOG_IN_REQUEST, SING_UP_SUCCESS, SING_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS } from '../reducers/user';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3003/api';\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login', loginData);\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: SING_UP_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 12;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 12;\n          return put({\n            type: SING_UP_FAILURE,\n            error: _context2.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(100);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SING_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchSignUp), fork(watchLogin), fork(watchLogout)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/sagas/user.js"],"names":["login","signUp","logout","watchSignUp","watchLogin","watchLogout","userSaga","all","fork","takeLatest","call","put","take","delay","takeEvery","LOG_IN_SUCCESS","LOG_IN_FAILURE","SING_UP_REQUEST","LOG_IN_REQUEST","SING_UP_SUCCESS","SING_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","axios","defaults","baseURL","loginAPI","loginData","post","action","data","result","type","console","error","signUpAPI","signUpData"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\r\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, SING_UP_REQUEST, LOG_IN_REQUEST, SING_UP_SUCCESS, SING_UP_FAILURE, LOG_OUT_REQUEST,LOG_OUT_SUCCESS } from '../reducers/user';\r\nimport axios from 'axios';\r\n \r\naxios.defaults.baseURL='http://localhost:3003/api';\r\n\r\nfunction loginAPI(loginData){ \r\n    return axios.post('/user/login', loginData);\r\n}\r\n\r\nfunction* login( action ){\r\n    try{ \r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n} \r\nfunction signUpAPI( signUpData ){\r\n    return axios.post('/user/',signUpData);\r\n}\r\nfunction* signUp(action){  //LOG_OUT_REQUEST 의 액션인자 임. 데이터가여기들어있다!\r\n    try{ \r\n        yield call(signUpAPI, action.data);  //call 매서드가 첫번째는 함수고 두번째는 인자(첫번째함수에 인자로전달되는인자).\r\n        //throw new Error('에러');\r\n        yield put({\r\n            type: SING_UP_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:SING_UP_FAILURE,\r\n            error:e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* logout(){\r\n    try{  \r\n        yield delay(100); \r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e); \r\n    }\r\n} \r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery( SING_UP_REQUEST, signUp)\r\n}\r\nfunction* watchLogin(){\r\n    yield takeEvery( LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery( LOG_OUT_REQUEST, logout)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork( watchSignUp ),\r\n        fork( watchLogin ), \r\n        fork( watchLogout),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}