{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: '지나가던사람',\n  Post: [],\n  Followings: ['탄이', '닐라', '초코'],\n  Followers: ['안보현', '박서준', '임재범']\n};\nexport const initialState = {\n  isLoggingIn: false,\n  //로그인시도중\n  isLogginsOut: false,\n  isLoggedIn: false,\n  //로그인\n  loginErrorReason: '',\n  //로긴 실패 사유\n  isSigningUp: false,\n  //회원가입시도중\n  singedUp: false,\n  //회원가입 성공\n  signUperrorReason: '',\n  //회원가입 실패 사유\n  myInfo: {},\n  //내정보\n  followingList: [],\n  followerList: [],\n  userInfo: null //남의 정보\n  //signUpData:{}, 이거왜빠짐?..\n\n};\nexport const SING_UP_REQUEST = 'SING_UP_REQUEST';\nexport const SING_UP_SUCCESS = 'SING_UP_SUCCESS';\nexport const SING_UP_FAILURE = 'SING_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; //유저정보 불러오는액션\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; //팔로우 불러오기\n\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE'; //팔로우하기\n\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE'; //언팔로우하기\n\nexport const UNFOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE'; // 팔로우하는사람 제거\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const signUpAction = data => ({\n  type: SING_UP_SUCCESS,\n  data\n});\nexport const signUpSuccess = {\n  type: SING_UP_SUCCESS\n};\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\nexport const signUpRequestAction = data => {\n  return {\n    type: SING_UP_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          //loginData: action.data,\n          isLoggingIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          myInfo: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          myInfo: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SING_UP_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggingIn","isLogginsOut","isLoggedIn","loginErrorReason","isSigningUp","singedUp","signUperrorReason","myInfo","followingList","followerList","userInfo","SING_UP_REQUEST","SING_UP_SUCCESS","SING_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","signUpAction","data","type","signUpSuccess","loginRequestAction","logoutRequestAction","signUpRequestAction","reducer","state","action","isLoading","me","signUpData"],"mappings":"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","sourcesContent":["\r\nconst dummyUser = {\r\n    nickname:'지나가던사람',\r\n    Post:[],\r\n    Followings:['탄이','닐라','초코'],\r\n    Followers:['안보현','박서준','임재범'], \r\n}\r\n\r\n\r\nexport const initialState ={\r\n    isLoggingIn : false, //로그인시도중\r\n    isLogginsOut : false,\r\n    isLoggedIn: false, //로그인\r\n    loginErrorReason:'', //로긴 실패 사유\r\n\r\n    isSigningUp: false, //회원가입시도중\r\n    singedUp: false, //회원가입 성공\r\n    signUperrorReason:'', //회원가입 실패 사유\r\n\r\n    myInfo :{}, //내정보\r\n    followingList:[],\r\n    followerList:[],\r\n\r\n    userInfo: null, //남의 정보\r\n    \r\n    //signUpData:{}, 이거왜빠짐?..\r\n};\r\n\r\nexport const SING_UP_REQUEST = 'SING_UP_REQUEST';\r\nexport const SING_UP_SUCCESS = 'SING_UP_SUCCESS';\r\nexport const SING_UP_FAILURE = 'SING_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; \r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\n//유저정보 불러오는액션\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'; \r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'; \r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n \r\n//팔로우 불러오기\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST'; \r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\n//팔로우하기\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST'; \r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\n//언팔로우하기\r\nexport const UNFOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST'; \r\nexport const UNFOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\n// 팔로우하는사람 제거\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST'; \r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n\r\nexport const signUpAction = (data)=> ({\r\n    type:SING_UP_SUCCESS,\r\n    data,\r\n})\r\n\r\nexport const signUpSuccess = {\r\n    type:SING_UP_SUCCESS,\r\n}\r\n\r\nexport const loginRequestAction = (data) =>({ \r\n    type: LOG_IN_REQUEST,\r\n    data, \r\n})\r\nexport const logoutRequestAction ={\r\n    type: LOG_OUT_REQUEST,\r\n}\r\n\r\nexport const signUpRequestAction = (data) =>{\r\n    return{\r\n        type: SING_UP_REQUEST,\r\n        data,\r\n    }\r\n}  \r\n\r\nconst reducer = ( state = initialState, action )=>{\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST:{\r\n            return{\r\n                ...state,\r\n                //loginData: action.data,\r\n                isLoggingIn:true, \r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:true,\r\n                myInfo: dummyUser,\r\n                isLoading:false,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE:{\r\n            return{\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:false,\r\n                myInfo: null,\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST:{\r\n            return{\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me:null,\r\n            }\r\n        }\r\n        case SING_UP_REQUEST:{\r\n            return{\r\n                ...state,\r\n                signUpData:action.data\r\n            }\r\n        }\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        } \r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}