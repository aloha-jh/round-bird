{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchHello),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nvar HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(4);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(e);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchHello() {\n  return _regeneratorRuntime.wrap(function watchHello$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(HELLO_SAGA, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    console.log(1);\n                    console.log(2);\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!true) {\n            _context4.next = 7;\n            break;\n          }\n\n          _context4.next = 3;\n          return take(HELLO_SAGA);\n\n        case 3:\n          console.log(1);\n          console.log(2);\n          _context4.next = 0;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([watchLogin(), watchSignUp()]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/sagas/user.js"],"names":["login","watchHello","watchLogin","watchSignUp","userSaga","all","fork","takeLatest","call","put","take","delay","takeEvery","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","HELLO_SAGA","loginAPI","type","console","error","e","log"],"mappings":";;oDAQUA,K;qDAeAC,U;qDAOAC,U;qDAQAC,W;qDAKeC,Q;;AA3CzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,SAAxD,QAAyE,oBAAzE;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAuD,kBAAvD;AAEA,IAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAmB,CAClB;;AAED,SAAUjB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMW,KAAK,CAAC,CAAD,CAAX;;AAFR;AAAA;AAIQ,iBAAMF,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEJ;AADA,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQK,UAAAA,OAAO,CAACC,KAAR,CAAcC,CAAd;AARR;AASQ,iBAAMZ,GAAG,CAAC;AACNS,YAAAA,IAAI,EAACH;AADC,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUd,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMW,SAAS,CAACI,UAAD,wCAAa;AAAA;AAAA;AAAA;AAAA;AACxBG,oBAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ;AACAH,oBAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAb,EAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUpB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,eACU,IADV;AAAA;AAAA;AAAA;;AAAA;AAEQ,iBAAMQ,IAAI,CAACM,UAAD,CAAV;;AAFR;AAGQG,UAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ;AACAH,UAAAA,OAAO,CAACG,GAAR,CAAY,CAAZ;AAJR;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUnB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNH,UAAU,EADJ,EAENC,WAAW,EAFL,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, takeLatest, call, put, take, delay, takeEvery } from 'redux-saga/effects';\r\nimport {LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE, } from '../reducers/user';\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA';\r\n\r\nfunction loginAPI(){ \r\n}\r\n\r\nfunction* login(){\r\n    try{\r\n        yield delay(4);  //\r\n        //yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    }catch(E){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchHello(){\r\n    yield takeEvery(HELLO_SAGA, function*(){\r\n        console.log(1);\r\n        console.log(2);\r\n    })\r\n}\r\n\r\nfunction* watchLogin(){\r\n    while(true){\r\n        yield take(HELLO_SAGA);\r\n        console.log(1);\r\n        console.log(2); \r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    \r\n}\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        watchLogin(),\r\n        watchSignUp()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}