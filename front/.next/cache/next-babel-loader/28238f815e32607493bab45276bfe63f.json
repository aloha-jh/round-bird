{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ljh\\\\Desktop\\\\all\\\\DigitalGallery\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { IconButton, Button, CardMedia, Card } from '@material-ui/core';\nimport { CardHeader, Avatar, CardContent, CardActions } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    }\n  };\n});\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      myInfo = _useSelector.myInfo;\n\n  var dispatch = useDispatch();\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    key: +post.createdAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": post.User.nickname[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }),\n    action: __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      style: {\n        marginTop: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 26\n      }\n    }, \"\\uD314\\uB85C\\uC789\"),\n    title: post.User.nickname,\n    subheader: post.createdAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, post.content), post.img && __jsx(CardMedia, {\n    className: classes.media,\n    image: post.img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }), __jsx(CardActions, {\n    disableSpacing: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(FavoriteIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), __jsx(CreateIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  })))));\n};\n\n_s(PostCard, \"l6uOR25KIHfD/ZoroGZGl8JMevE=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.postTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/components/PostCard.js"],"names":["React","useState","IconButton","Button","CardMedia","Card","CardHeader","Avatar","CardContent","CardActions","FavoriteIcon","CreateIcon","makeStyles","PropTypes","useSelector","useDispatch","useStyles","theme","media","height","paddingTop","PostCard","post","classes","commentFormOpened","setCommentFormOpened","commentText","setCommentText","state","user","myInfo","dispatch","createdAt","User","nickname","marginTop","content","img","postTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';   \r\nimport { IconButton, Button, CardMedia, Card } from '@material-ui/core';   \r\nimport { CardHeader, Avatar, CardContent, CardActions }from '@material-ui/core'; \r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n  \r\nconst useStyles = makeStyles((theme) => ({ \r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    }\r\n}));\r\n\r\nconst PostCard = ({post}) =>{\r\n    const classes = useStyles();\r\n    \r\n    const [commentFormOpened, setCommentFormOpened ] = useState(false);\r\n    const [commentText, setCommentText ]=useState('');\r\n    const {myInfo} = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return(\r\n        <>\r\n        <hr/>\r\n        <div key={+post.createdAt}>\r\n            <CardHeader\r\n                avatar={<Avatar aria-label={post.User.nickname[0]}></Avatar>}\r\n                action={ <Button variant=\"contained\" color=\"primary\" disableElevation\r\n                style={{marginTop:0}}>\r\n                팔로잉</Button>}\r\n                title={post.User.nickname}\r\n                subheader={post.createdAt}\r\n            />\r\n            <CardContent>\r\n                {post.content}\r\n            </CardContent>\r\n            { post.img && <CardMedia \r\n            className={classes.media}\r\n            image={ post.img} />}\r\n        \r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon /><CreateIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nPostCard.postTypes = {\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        img: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    })\r\n}\r\n\r\nexport default PostCard;\r\n\r\n             "]},"metadata":{},"sourceType":"module"}