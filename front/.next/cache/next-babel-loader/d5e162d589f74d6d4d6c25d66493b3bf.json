{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ljh\\\\Desktop\\\\all\\\\DigitalGallery\\\\front\\\\components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { IconButton, Button, CardMedia, Card, TextField, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { CardHeader, Avatar, CardContent, CardActions, CircularProgress } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MessageIcon from '@material-ui/icons/Message';\nimport Link from 'next/link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    }\n  };\n});\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      myInfo = _useSelector.myInfo;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      CommentAdded = _useSelector2.CommentAdded,\n      isAddingComment = _useSelector2.isAddingComment;\n\n  var dispatch = useDispatch();\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []); //댓글 입력버튼클릭시\n\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!myInfo.id) {\n      return alert('로그인 필요');\n    }\n\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id\n      }\n    });\n  }, [myInfo && myInfo.id]);\n  useEffect(function () {\n    setCommentText('');\n  }, [CommentAdded === true]);\n  return __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    key: +post.createdAt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": post.User.nickname[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }),\n    action: __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      style: {\n        marginTop: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }\n    }, \"\\uD314\\uB85C\\uC789\"),\n    title: post.User.nickname,\n    subheader: post.createdAt.split('T')[0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, post.content.split(/(#[^\\s]+)/g).map(function (v) {\n    if (v.match(/(#[^\\s]+)/g)) {\n      //만약 #ㅇㅇ 면, 링크로.\n      return __jsx(Link, {\n        href: \"/hashtag\",\n        key: v,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 59\n        }\n      }, v));\n    }\n\n    return v;\n  })), post.img && __jsx(CardMedia, {\n    className: classes.media,\n    image: post.img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }\n  }), __jsx(CardActions, {\n    disableSpacing: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(IconButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, __jsx(FavoriteIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })), __jsx(IconButton, {\n    onClick: onToggleComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, __jsx(MessageIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })), commentFormOpened && __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"\\uB4F1\\uB85D\", isAddingComment && __jsx(CircularProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 53\n    }\n  })))), commentFormOpened && __jsx(React.Fragment, null, __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"\\uCD1D \", post.Comments && post.Comments ? post.Comments.length : 0, \"\\uAC1C\\uC758 \\uB313\\uAE00\")), post.Comments !== 0 && post.Comments.map(function (item) {\n    return __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, item.User.nickname[0])), __jsx(ListItemText, {\n      primary: item.User.nickname,\n      secondary: item.content + item.createdAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }));\n  }))))));\n};\n\n_s(PostCard, \"SHfhsA0pL3Gfk6qBYzI3KNTQG70=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.postTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","IconButton","Button","CardMedia","Card","TextField","List","ListItem","ListItemAvatar","ListItemText","CardHeader","Avatar","CardContent","CardActions","CircularProgress","FavoriteIcon","MessageIcon","Link","makeStyles","PropTypes","ADD_COMMENT_REQUEST","useSelector","useDispatch","useStyles","theme","media","height","paddingTop","PostCard","post","classes","commentFormOpened","setCommentFormOpened","commentText","setCommentText","state","user","myInfo","CommentAdded","isAddingComment","dispatch","onToggleComment","prev","onChangeCommentText","e","target","value","onSubmitComment","preventDefault","id","alert","type","data","postId","createdAt","User","nickname","marginTop","split","content","map","v","match","img","Comments","length","item","postTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React ,{useState, useCallback, useEffect } from 'react';   \r\nimport { IconButton, Button, CardMedia, Card, TextField, List, ListItem, ListItemAvatar,ListItemText } from '@material-ui/core';   \r\nimport { CardHeader, Avatar, CardContent, CardActions, CircularProgress }from '@material-ui/core'; \r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport Link from 'next/link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {ADD_COMMENT_REQUEST} from '../reducers/post';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n  \r\nconst useStyles = makeStyles((theme) => ({ \r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    }\r\n}));\r\n\r\nconst PostCard = ({post}) =>{\r\n    const classes = useStyles();\r\n    \r\n    const [commentFormOpened, setCommentFormOpened ] = useState(false);\r\n    const [commentText, setCommentText ]=useState('');\r\n    const {myInfo } = useSelector(state => state.user);\r\n    const { CommentAdded , isAddingComment} = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    const onToggleComment = useCallback(() =>{\r\n        setCommentFormOpened(prev=> !prev);\r\n    },[]);\r\n\r\n    const onChangeCommentText = useCallback((e) =>{\r\n        setCommentText(e.target.value);\r\n    },[]);\r\n\r\n    //댓글 입력버튼클릭시\r\n    const onSubmitComment = useCallback((e) =>{\r\n        e.preventDefault();\r\n        if( !myInfo.id ){\r\n            return alert('로그인 필요');\r\n        }\r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:{\r\n                postId:post.id,\r\n            }\r\n        })\r\n    },[myInfo && myInfo.id]);\r\n\r\n    useEffect(()=>{  \r\n        setCommentText(''); \r\n    },[CommentAdded === true]);\r\n\r\n    return(\r\n        <>\r\n        <hr/>\r\n        <div key={+post.createdAt}>\r\n            <CardHeader\r\n                avatar={<Avatar aria-label={post.User.nickname[0]}></Avatar>}\r\n                action={ <Button variant=\"contained\" color=\"primary\" disableElevation\r\n                style={{marginTop:0}}>\r\n                팔로잉</Button>}\r\n                title={post.User.nickname}\r\n                subheader={post.createdAt.split('T')[0]}\r\n            />\r\n            <CardContent>\r\n                {post.content.split(/(#[^\\s]+)/g).map(v=>{\r\n                    if(v.match(/(#[^\\s]+)/g) ){ //만약 #ㅇㅇ 면, 링크로.\r\n                        return(\r\n                            <Link href=\"/hashtag\" key={v}><a>{v}</a></Link> \r\n                        )\r\n                    }\r\n                    return v;\r\n                })}\r\n            </CardContent>\r\n            { post.img && <CardMedia \r\n            className={classes.media}\r\n            image={ post.img} />}\r\n        \r\n            <CardActions disableSpacing>\r\n                <List>\r\n                    <ListItem>\r\n                        <IconButton >\r\n                            <FavoriteIcon />\r\n                        </IconButton>  \r\n                        <IconButton onClick={onToggleComment}>\r\n                            <MessageIcon/>  \r\n                        </IconButton>\r\n                        {commentFormOpened &&  \r\n                        <form onSubmit={onSubmitComment}>\r\n                            <TextField value={commentText} onChange={onChangeCommentText}/>\r\n                            <Button type=\"submit\">\r\n                                등록\r\n                                {isAddingComment && <CircularProgress />}\r\n                            </Button>\r\n                        </form>\r\n                        }\r\n                    </ListItem> \r\n                        \r\n                    {commentFormOpened && \r\n                        <>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                        <p>총 {post.Comments && post.Comments ? post.Comments.length : 0 }개의 댓글</p>\r\n                        </ListItem>\r\n                        {post.Comments !== 0 && post.Comments.map( (item)=>(\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    {item.User.nickname[0]}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                            primary={item.User.nickname}\r\n                            secondary={item.content +item.createdAt} \r\n                            />\r\n                        </ListItem>    \r\n                        ))}  \r\n                        </>\r\n                    }\r\n                </List>\r\n            </CardActions>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nPostCard.postTypes = {\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        img: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    })\r\n}\r\n\r\nexport default PostCard;\r\n\r\n             "]},"metadata":{},"sourceType":"module"}