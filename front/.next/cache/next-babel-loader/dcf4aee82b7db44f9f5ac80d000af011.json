{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ljh\\\\Desktop\\\\all\\\\DigitalGallery\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Button, CardMedia, CircularProgress } from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      postAdded = _useSelector.postAdded,\n      isAddingPost = _useSelector.isAddingPost;\n\n  var _useState = useState(''),\n      textArea = _useState[0],\n      setTextArea = _useState[1]; // useEffect(()=>{\n  //     setTextArea('');\n  // },[postAdded === true])\n\n\n  var onSubmitForm = useCallback(function (e) {\n    console.log('why!!');\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        textArea: textArea\n      }\n    });\n  }, []);\n  var onChangeTextArea = useCallback(function (e) {\n    setTextArea(e.target.value);\n  }, [textArea]);\n  return (// <form encType=\"multipart/form-data\" onSubmit={onSubmitForm}> \n    __jsx(\"form\", {\n      onSubmit: onSubmitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, __jsx(\"textarea\", {\n      className: \"post-textarea\",\n      onChange: onChangeTextArea,\n      value: textArea,\n      placeholder: \"\\uC624\\uB298 \\uD558\\uB8E8\\uB294 \\uC5B4\\uB560\\uB098\\uC694?\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), __jsx(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(PhotoCamera, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    })), __jsx(\"button\", {\n      htmltype: \"submit\",\n      color: \"primary\",\n      style: {\n        \"float\": 'right'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"\\uC62C\\uB9AC\\uAE30\", isAddingPost && __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    })), imagePaths && imagePaths.map(function (v, i) {\n      return __jsx(React.Fragment, null, __jsx(CardMedia, {\n        image: \"http://localhost:3000/\" + v,\n        alt: v,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, \"\\uC81C\\uAC70\"));\n    }))\n  );\n};\n\n_s(PostForm, \"SmsFER3SBmCkWUybcQI8odJY5CQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","IconButton","Button","CardMedia","CircularProgress","PhotoCamera","ADD_POST_REQUEST","PostForm","dispatch","state","user","imagePaths","postAdded","isAddingPost","textArea","setTextArea","onSubmitForm","e","console","log","preventDefault","type","data","onChangeTextArea","target","value","map","v","i"],"mappings":"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","sourcesContent":["import React ,{ useCallback ,useState, useEffect }from 'react'; \r\nimport { useSelector , useDispatch } from 'react-redux'; \r\nimport { IconButton, Button, CardMedia, CircularProgress }from '@material-ui/core'; \r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () =>{\r\n    const dispatch = useDispatch();\r\n    const { imagePaths ,postAdded, isAddingPost } = useSelector(state=>state.user);\r\n    const [ textArea, setTextArea ] = useState('');\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     setTextArea('');\r\n    // },[postAdded === true])\r\n\r\n    const onSubmitForm = useCallback((e)=>{\r\n        console.log('why!!')\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:{\r\n                textArea,\r\n            }\r\n        })\r\n    },[]);\r\n    const onChangeTextArea = useCallback((e)=>{\r\n        setTextArea(e.target.value);\r\n    },[textArea]);\r\n\r\n    return(\r\n        // <form encType=\"multipart/form-data\" onSubmit={onSubmitForm}> \r\n        <form onSubmit={onSubmitForm}> \r\n            <textarea className=\"post-textarea\" onChange={onChangeTextArea } value={textArea} \r\n            placeholder=\"오늘 하루는 어땠나요?\" /> \r\n            <input type=\"file\" multiple hidden  />\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoCamera />\r\n            </IconButton> \r\n            <button htmltype=\"submit\" color=\"primary\" style={{float:'right'}} > \r\n                올리기{isAddingPost && <CircularProgress />}\r\n                </button>\r\n            {imagePaths && imagePaths.map( (v,i)=>{\r\n                return(\r\n                <><CardMedia \r\n                image={\"http://localhost:3000/\"+v} alt={v}\r\n                /><Button>제거</Button>\r\n                </>\r\n                )\r\n            })} \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;\r\n\r\n             "]},"metadata":{},"sourceType":"module"}