{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljh\\\\Desktop\\\\all\\\\DigitalGallery\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Button, CardMedia, CircularProgress } from '@material-ui/core';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    postAdded,\n    isAddingPost\n  } = useSelector(state => state.user);\n  const {\n    0: textArea,\n    1: setTextArea\n  } = useState(''); // useEffect(()=>{\n  //     setTextArea('');\n  // },[postAdded === true])\n\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        textArea\n      }\n    });\n  }, []);\n  const onChangeTextArea = useCallback(e => {\n    setTextArea(e.target.value);\n  }, [textArea]);\n  return __jsx(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"textarea\", {\n    className: \"post-textarea\",\n    onChange: onChangeTextArea,\n    value: textArea,\n    placeholder: \"\\uC624\\uB298 \\uD558\\uB8E8\\uB294 \\uC5B4\\uB560\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    color: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmltype: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"\\uC62C\\uB9AC\\uAE30\", isAddingPost && __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  })), imagePaths && imagePaths.map((v, i) => {\n    return __jsx(React.Fragment, null, __jsx(CardMedia, {\n      image: \"http://localhost:3000/\" + v,\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }), __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \"\\uC81C\\uAC70\"));\n  }));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/ljh/Desktop/all/DigitalGallery/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","IconButton","Button","CardMedia","CircularProgress","PhotoCamera","ADD_POST_REQUEST","PostForm","dispatch","imagePaths","postAdded","isAddingPost","state","user","textArea","setTextArea","onSubmitForm","e","preventDefault","type","data","onChangeTextArea","target","value","float","map","v","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,gBAAxC,QAA+D,mBAA/D;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,MAAMC,QAAQ,GAAG,MAAK;AAClB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAA0CZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,IAAd,CAA3D;AACA,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAA4BlB,QAAQ,CAAC,EAAD,CAA1C,CAHkB,CAMlB;AACA;AACA;;AAEA,QAAMmB,YAAY,GAAGpB,WAAW,CAAEqB,CAAD,IAAK;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAACb,gBADA;AAELc,MAAAA,IAAI,EAAC;AACDN,QAAAA;AADC;AAFA,KAAD,CAAR;AAMH,GAR+B,EAQ9B,EAR8B,CAAhC;AASA,QAAMO,gBAAgB,GAAGzB,WAAW,CAAEqB,CAAD,IAAK;AACtCF,IAAAA,WAAW,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAX;AACH,GAFmC,EAElC,CAACT,QAAD,CAFkC,CAApC;AAIA,SACI;AAAM,IAAA,OAAO,EAAC,qBAAd;AAAoC,IAAA,QAAQ,EAAEE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,SAAS,EAAC,eAApB;AAAoC,IAAA,QAAQ,EAAEK,gBAA9C;AAAiE,IAAA,KAAK,EAAEP,QAAxE;AACA,IAAA,WAAW,EAAC,2DADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,kBAAW,gBAAvC;AAAwD,IAAA,SAAS,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAE;AAACU,MAAAA,KAAK,EAAC;AAAP,KAA/B;AAAgD,IAAA,QAAQ,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACQb,YAAY,IAAI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,CAPJ,EAUKF,UAAU,IAAIA,UAAU,CAACgB,GAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAClC,WACA,4BAAE,MAAC,SAAD;AACF,MAAA,KAAK,EAAE,2BAAyBD,CAD9B;AACiC,MAAA,GAAG,EAAEA,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADA;AAMH,GAPc,CAVnB,CADJ;AAqBH,CA5CD;;AA8CA,eAAenB,QAAf","sourcesContent":["import React ,{ useCallback ,useState, useEffect }from 'react'; \r\nimport { useSelector , useDispatch } from 'react-redux'; \r\nimport { IconButton, Button, CardMedia, CircularProgress }from '@material-ui/core'; \r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () =>{\r\n    const dispatch = useDispatch();\r\n    const { imagePaths ,postAdded, isAddingPost } = useSelector(state=>state.user);\r\n    const [ textArea, setTextArea ] = useState('');\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     setTextArea('');\r\n    // },[postAdded === true])\r\n\r\n    const onSubmitForm = useCallback((e)=>{\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:{\r\n                textArea,\r\n            }\r\n        })\r\n    },[]);\r\n    const onChangeTextArea = useCallback((e)=>{\r\n        setTextArea(e.target.value);\r\n    },[textArea]);\r\n\r\n    return(\r\n        <form encType=\"multipart/form-data\" onSubmit={onSubmitForm}> \r\n            <textarea className=\"post-textarea\" onChange={onChangeTextArea } value={textArea} \r\n            placeholder=\"오늘 하루는 어땠나요?\" /> \r\n            {/* <input type=\"file\" multiple hidden value=\"\"/> */}\r\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoCamera />\r\n            </IconButton> \r\n            <Button color=\"primary\" style={{float:'right'}} htmltype=\"submit\"> \r\n                올리기{isAddingPost && <CircularProgress />}\r\n                </Button>\r\n            {imagePaths && imagePaths.map( (v,i)=>{\r\n                return(\r\n                <><CardMedia \r\n                image={\"http://localhost:3000/\"+v} alt={v}\r\n                /><Button>제거</Button>\r\n                </>\r\n                )\r\n            })} \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;\r\n\r\n             "]},"metadata":{},"sourceType":"module"}